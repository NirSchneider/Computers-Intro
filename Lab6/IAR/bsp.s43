#include    "bsp.h"

;------------------------- prep LCD command ------------------------------------

LCD_Macro   MACRO  command,delay,RS
            push.b command
            push.w delay
            push.w RS
            call   #Lcd_cmd
            ENDM


;===============================================================================
;                               BSP
;===============================================================================
         
         MODULE BSP
         PUBLIC ConfSYS,ConfLCD,ConfADC
         EXTERN Lcd_cmd
         RSEG   CODE        

;------------------------ Ports Config Routine ---------------------------------

ConfSYS  bic.b #0xe7,&P1SEL    ;P1.0-2,5-7 is I/O Mode
         bic.b #0xff,&P2SEL    ;All Port2 is I/O Mode
         bis.b #0xe0,&P1DIR    ;P1.5-7 Pin Are Output
         bic.b #0x07,&P1DIR    ;P1.0-2 Pin Are Input
         bis.b #0xff,&P2DIR    ;All Port2 Pin Are Output
         bic.b #0x03,P1IES     ;setup P1.0-1 to be falling edge (pull-up)
         bis.b #0x04,P1IES     ;setup P1.3 to be risin edge (pull-down)
         bis.b #0x07,P1IE      ;enable interupt from P1.0-2
         bic.b #0xff,&P1IFG    ;Clear interupt Flags
         bic.b #0xff,&P1OUT
         bic.b #0xff,&P2OUT
         RET

;------------------------- LCD Config Routine ----------------------------------

ConfLCD  LCD_Macro #0x3f,#5250,#0   ;#command/ascii,#delay,#RS Bit
         LCD_Macro #0x3f,#1750,#0
         LCD_Macro #0x3f,#70,#0
         LCD_Macro #0x3c,#1750,#0   ;define 16x2 LCD
         LCD_Macro #0x0f,#1750,#0   ;LCD cursor on
         LCD_Macro #0x01,#1750,#0   ;Clear the screen
         LCD_Macro #0x06,#1750,#0   ;increment cursor
         LCD_Macro #0x80,#1750,#0   
         LCD_Macro #0x02,#1750,#0   ;cursor to the head of 1st line
         RET

;------------------------ -----ADC conf Routine --------------------------------
ConfADC  mov.w #ADC10SSEL_3+CONSEQ_2+INCH_3+ADC10DIV_7,&ADC10CTL1  
         mov.w #SREF_0+ADC10ON+ADC10IE+MSC+ADC10SHT_3,&ADC10CTL0
         mov.b #BIT3,&ADC10AE0
         RET
;-------------------------------------------------------------------------------

         ENDMOD
         END