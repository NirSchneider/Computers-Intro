#include "bsp.h"

Rigth  EQU   0x14
Left   EQU   0x10

;------------------------- prep LCD command ------------------------------------

LCD_Macro   MACRO  command,delay,RS
            push.b command
            push.w delay
            push.w RS
            call   #Lcd_cmd
            ENDM

;------------------------- Movecursor ------------------------------------------

Movecursor  MACRO     Direction,Times
            LOCAL     MoveLoop
            mov.w     Times,R10
MoveLoop    LCD_Macro Direction,#1750,#0
            dec       R10
            jnz       MoveLoop
            ENDM

;------------------------- prepPrint -------------------------------------------

prepPrint   MACRO  string_address  
            push.w string_address
            call   #LCDPrint
            ENDM            

;------------------------- HexToDec --------------------------------------------

compDec   MACRO unit,unitnum
          LOCAL unitLoop,Nextunit
unitLoop  cmp.w unitnum,Hexnum
          jn    Nextunit
          inc.w unit
          sub.w unitnum,Hexnum
          jmp   unitLoop
Nextunit  ENDM

;------------------------- Sum64 -----------------------------------------------

Sum64    MACRO  Avgi         ;ADC12 needed 15
         LOCAL  Sum64L
         mov.w  #32,R14
         mov.w  #0,Avgi
Sum64L   add.w  0(R11),Avgi         
         incd.w R11
         dec.w  R14
         jnz    Sum64L
         ENDM
 
;------------------------- rra6 -----------------------------------------------

rra6    MACRO  Avgi         ;ADC12 needed 15
        rra.w  Avgi
        rra.w  Avgi
        rra.w  Avgi
        rra.w  Avgi
        rra.w  Avgi
        rra.w  Avgi
        rra.w  Avgi
        ENDM
;===============================================================================
;                               API
;===============================================================================
         
         MODULE API
         PUBLIC Maximum,MaxShow, Avrege,CalcAvg
         EXTERN Lcd_cmd,LCDPrint, ConfADC
         EXTERN MAX,MIN,AVG,Mode
         EXTERN Max,MaxSamp,QuotientMax,ResidueMax
         EXTERN AvgSamp,ResidueAvg,QuotientAvg,Avgtemp
         EXTERN divmaster,Hexnum,Dozens,unity
         RSEG   CODE        

Maximum  LCD_Macro  #0x01,#1750,#0  ;Clean LCD
         LCD_Macro  #0x02,#1750,#0  ;move cursor to the 1st line
         prepPrint  #MAX
         LCD_Macro  #0xc0,#1750,#0  ;move cursor to the 2st line
         prepPrint  #MIN
         LCD_Macro  #0x02,#1750,#0  ;move cursor to the 1st line
         mov.w      #0,MaxSamp
         mov.w      #0x0118,divmaster

         bis.b   #DIVS0+DIVS1,BCSCTL2
         
ConfADC1 CALL #ConfADC 

SampLoop cmp.b #1,Mode 
         jnz   MIXtoFSM 

         bis.w #ENC,&ADC10CTL0
         bis.w #ADC10SC,&ADC10CTL0
         bis.w #CPUOFF+GIE,SR        ;Enter Sleep Mode-LPM0
         jmp   SampLoop
         
MIXtoFSM  bic.w      #ADC10ON+ADC10IE,&ADC10CTL0
          LCD_Macro  #0x01,#1750,#0  ;Clean LCD
          RET

;-------------------------------------------------------------------------------

MaxShow    mov.w #0,QuotientMax
           mov.w #0,ResidueMax
           mov.w Max,MaxSamp

DivMax1    cmp.w divmaster,MaxSamp
           jn    resdivMax
           sub.w divmaster,MaxSamp
           inc.w QuotientMax
           tst.w MaxSamp
           jz    ShowMax
           jmp   DivMax1
           
resdivMax  push.w MaxSamp
           call   #Mult
           pop.w  MaxSamp
           
DivMax2    cmp.w divmaster,MaxSamp
           jn    ShowMax
           sub.w divmaster,MaxSamp
           inc.w ResidueMax
           tst.w MaxSamp
           jz    ShowMax
           jmp   DivMax2


ShowMax    LCD_Macro   #0x02,#1750,#0
           Movecursor  #Rigth,#7             ;move head one step before esronic point
           add.b       #48,QuotientMax       ;add 0x30 to present in ascii
           LCD_Macro   QuotientMax,#1750,#1
           Movecursor  #Rigth,#1             ;head one step after esronic point
           
           mov.w      ResidueMax,Hexnum
           mov.w      #48,Dozens
           mov.w      #48,unity
           compDec    Dozens,#10
           compDec    unity,#1
           LCD_Macro  Dozens,#1750,#1
           LCD_Macro  unity,#1750,#1
           
           RET

;===============================================================================
Avrege   LCD_Macro  #0x01,#1750,#0  ;Clean LCD
         LCD_Macro  #0x02,#1750,#0  ;move cursor to the 1st line
         prepPrint  #AVG
         LCD_Macro  #0x02,#1750,#0  ;move cursor to the 1st line
         mov.w      #0,AvgSamp
         mov.w      #0x0117,divmaster
         ;mov.w      #FWKEY,&FCTL3
         ;mov.w      #FWKEY+WRT+BLKWRT,FCTL
         
ConfADC2 CALL #ConfADC  
         
AvgLoop  cmp.b #2,Mode 
         jnz   AvgtoFSM
         
         mov.b #0x80,&ADC10DTC1    ; Number of transfers per block
         mov.w #0x0260,&ADC10SA    ;ADC10 start address
         ;mov.w #0xf000,&ADC10SA   ;ADC10 start address
         bis.w #ENC,&ADC10CTL0
         bis.w #ADC10SC,&ADC10CTL0
         
         bis.w #CPUOFF+GIE,SR     ;Enter Sleep Mode-LPM0
         jmp   AvgLoop
         
AvgtoFSM  bic.w      #ADC10ON+ADC10IE,&ADC10CTL0
          mov.b      #0,&ADC10DTC1
          LCD_Macro  #0x01,#1750,#0  ;Clean LCD
          RET

;-------------------------------------------------------------------------------

CalcAvg  mov.w  #0x0260,R11
         Sum64  Avgtemp             ;ADC12 needed only 15
         rra6   Avgtemp             ;ADC12 needed only 15
         mov.w  Avgtemp,AvgSamp
         Sum64  Avgtemp             ;ADC12 needed only 15
         rra6   Avgtemp             ;ADC12 needed only 15
         add.w  Avgtemp,AvgSamp
         Sum64  Avgtemp             ;ADC12 needed only 15
         rra6   Avgtemp             ;ADC12 needed only 15
         add.w  Avgtemp,AvgSamp
         Sum64  Avgtemp             ;ADC12 needed only 15
         rra6   Avgtemp             ;ADC12 needed only 15
         add.w  Avgtemp,AvgSamp

;AVG

           mov.w #0,QuotientAvg
           mov.w #0,ResidueAvg
DivAVG1    cmp.w divmaster,AvgSamp
           jn    resdivAvg
           sub.w divmaster,AvgSamp
           inc.w QuotientAvg
           tst.w AvgSamp
           jz    ShowAvg
           jmp   DivAVG1
           
resdivAvg  push.w AvgSamp
           call   #Mult
           pop.w  AvgSamp
           
           
DivAvg2    cmp.w divmaster,AvgSamp
           jn    ShowAvg
           sub.w divmaster,AvgSamp
           inc.w ResidueAvg
           tst.w AvgSamp
           jz    ShowAvg
           jmp   DivAvg2

ShowAvg    LCD_Macro   #0x02,#1750,#0
           Movecursor  #Rigth,#7
           add.b       #48,QuotientAvg       ;add 0x30 to present in ascii
           LCD_Macro   QuotientAvg,#1750,#1
           Movecursor  #Rigth,#1
           
           mov.w      ResidueAvg,Hexnum
           mov.w      #48,Dozens
           mov.w      #48,unity
           compDec    Dozens,#10
           compDec    unity,#1
           LCD_Macro  Dozens,#1750,#1
           LCD_Macro  unity,#1750,#1
           RET

;-------------------------------------------------------------------------------

Mult       mov.w 2(SP),R12
           mov.w R12,R13
           rla.w R13
           rla.w R12
           rla.w R12
           rla.w R12
           add.w R12,R13
           mov.w R13,R12
           add.w R12,R13
           rla.w R13
           rla.w R13
           add.w R12,R13
           add.w R12,R13
           mov.w R13,2(SP)
           RET
                                
;-------------------------------------------------------------------------------
          ENDMOD
          END