#include    "bsp.h"

;------------------------- Debounce --------------------------------------------

Debounce    MACRO  cycles
            LOCAL  DeLoop
            mov.w  cycles,R4     
DeLoop      dec.w  R4                     
            jnz    DeLoop
            ENDM 

LCD_Macro   MACRO  command,delay,RS
            push.b command
            push.w delay
            push.w RS
            call   #Lcd_cmd
            ENDM
            
;===============================================================================
;                               HAL
;===============================================================================
         
         MODULE HAL
         PUBLIC SysConfig,Lcd_cmd,LCDPrint 
         PUBLIC PORT1_ISR, ADC10_ISR
         EXTERN ConfSYS,ConfLCD,ConfADC
         EXTERN Mode, MAXMode, Avg 
         RSEG   CODE        

;-------------------------Systen Configuration----------------------------------
SysConfig CALL #ConfSYS
          CALL #ConfLCD
          ;CALL #ConfADC
          RET
;------------------------ LCD string print Routine -----------------------------

LCDPrint  pop.w     R8
          pop.w     R9        
printing  LCD_Macro 0(R9),#1750,#1
          inc.w     R9
          tst.b     0(R9)
          jnz       printing  
          push.w    R8
          RET 

;------------------------ LCD Command execute Routine --------------------------

Lcd_cmd  pop.w  R6                ;PC for RET
         pop.w  R7                ;RS-command/ascii code?
         pop.w  R4                ;delay time
         pop.b  R5                ;command/ascii data
         mov.b  #0,LCD_DATA       ;clear LCD
         Debounce R4
         tst    R7                ;check if its command/ascii code
         jz     command
         bis.b  #0x40,LCD_CONTROL ;if it is ascii, set RS bit
command  mov.b  R5,LCD_DATA         
         bis.b  #0x20,LCD_CONTROL ;E=1, execute the command
         nop
         nop
         bic.b  #0x20,LCD_CONTROL ;E=0
         push.w R6
         bic.b  #0x40,LCD_CONTROL ;clear RS Bit
         RET


;================ Interrupt By Bottun Routine ==================================

PORT1_ISR bic.w    #ADC10ON+ADC10IE,&ADC10CTL0
          bit.b    #0x01,PBFLG
          jz       Mo2
          mov.b    #0x01,Mode     ;setup mode1
          jmp      BackFSM
          
Mo2       bit.b    #0x02,PBFLG          
          jz       Mo0
          mov.b    #0x02,Mode     ;setup mode2
          jmp      BackFSM         

Mo0       mov.b    #0x00,Mode     ;setup sleep mode
BackFSM   Debounce #0x00f4        ;debounce, for electrical issue
          bic.w    #CPUOFF,0(sp)  ;Exit Sleep Mode
          bic.b    #0xff,PBFLG    ;reset all Interrupt push-up/down flags ;;P1IFG
          bis.w    #ADC10IE,&ADC10CTL0
          RETI
          
;====================== ADC10 Interrupt Routine ================================

ADC10_ISR  cmp.b #1,Mode
           jz    MAXMode
           cmp.b #2,Mode
           jz    Avg
           bic.w #CPUOFF,0(SP)  ;Exit Sleep Mode
           RETI   

           
;-------------------------------------------------------------------------------
          ENDMOD
          END