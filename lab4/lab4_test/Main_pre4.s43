#include <msp430g2553.h>     ;define controlled include file
#include "bsp.h"

            NAME    Main
            PUBLIC  State ;Main???
            EXTERN SysConfig, ClrLEDs, IncLED, DecLED, delay
            EXTERN PrintLEDs, ReadSWs, Binar, OneLED, PWM
            ;EXTERN  Binar, OneLED, AllLED
            ;EXTERN  Delay_05sec
            
Debounce     MACRO  cycles
             LOCAL  L
             mov.b  cycles,R15     
L            dec.b  R15                     
             jnz    L
             ENDM
             
;-------------------------------------------------------------------------------
            ORG     0C000h                  ; Begins a RAM segment
;-------------------------------------------------------------------------------

State       DW   0    ;start variable
PullUp      EQU  280  ;wait of 0.8msec = (3op*280)/2^20
PullDown    EQU  70   ;wait of 0.2msec = (3op*70)/2^20

;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; Begins a relocatable segment name of CSTACK - Define stack segment
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; Assemble to Flash memory -like void main in C
;-----------------------------------------------------------------------------

Main         mov.w   #SFE(CSTACK),SP        ; Initialize stack pointer
StopWDT      mov.w   #WDTPW+WDTHOLD,&WDTCTL  
             call    #SysConfig
             mov     #1,R10             ;Binar - checkpoint
             mov     #1,R11             ;OneLED - checkpoint     
        
;---------------------------- FSM_loop -------------------------------------
             clr     R9
state0       cmp     #0,R9                   ;check if state0           
             jnz     state1
             call    #ClrLEDs
             bis.b   #CPUOFF+GIE,SR 

state1       cmp     #1,R9                   ;check if state1
             ;jz      P1                                  
             jnz     state2
             DINT                            ;disable cutoff (atomic function)
             call    #Binar                  ;infinite function
             push    #delay62_5ms
             call    #delay
             EINT                            ;enable cuoff
            
state2       cmp     #2,R9                   ;check if state2
             ;jz      P2 
             jnz     state3
             DINT                            ;disable cuoff (atomic function)
             call    #OneLED                 ;infinite function
             push    #delay62_5ms
             call    #delay
             EINT                            ;enable cutoff
             
state3       cmp     #3,R9                   ;check if state3
;             jz      P3  
             jnz     state0
;             DINT
             call    #PWM
             push    #delay62_5ms
             call    delay
;             EINT
             
             jmp     state0
             nop

;P1          call    #Binar
;jmp         state0
;P2          call    #OneLED
;jmp         state0
;P3          call    #AllLED
;jmp         state0
;nop

;------------------------------------------------------------------------------------------ 
;               PORT2 Interrupt Service Routine  of SW1=P1.0
;------------------------------------------------------------------------------------------
PORT2_ISR ;move to hal.s43
             bit.b  #0x01,&P2IFG            ;check if P2.0 is pushed  
             jnz    P2_0
             bit.b  #0x02,&P2IFG            ;check if P2.1 is pushed  
             jnz    P2_1
             bit.b  #0x04,&P2IFG            ;check if P2.2 is pushed  
             jnz    P2_2
             bit.b  #0x08,&P2IFG            ;check if P2.3 is pushed  
             jnz    P2_3
             reti                           ; interrupt hapened from another source
             
P2_0         mov.b    #1,R9
             jmp    exitLPM0
P2_1         mov.b    #2,R9
             jmp    exitLPM0
P2_2         mov.b    #3,R9
             jmp    exitLPM0
P2_3         mov.b    #0,R9
exitLPM0     bic    #CPUOFF,0(SP)           ; Exit LMP0
             bic.b  #0xff,&P2IFG  
             reti
             
;-------------------------------------------------------------------------------------------------------------------------------------------             
            COMMON  INTVEC                  ; Interrupt Vectors-Begins a common segment with name of INTVEC 
;-------------------------------------------------------------------------------------------------------------------------------------------
            ORG     PORT2_VECTOR            ;PORT2 Interrupt Vector
            DW      PORT2_ISR
            ORG     RESET_VECTOR            ; MSP430 RESET Vector
            DW      Main                   
            END
