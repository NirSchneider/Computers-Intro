#include "bsp.h"

                MODULE    HAL
                PUBLIC    SysConfig, PrintLEDs, ClrLEDs, delay,delay_ms
                EXTERN    GPIOconfig;, TIMERconfig, ADCconfig
                EXTERN    state

                RSEG      CODE
           
;----------------------------------------------------------------------------------------------
;             System configuration  
;----------------------------------------------------------------------------------------------
SysConfig
          CALL   #GPIOconfig
          ret
           
;----------------------------------------------------------------------------------------------
;             Print LEDs - function only with argument and no return value  
;----------------------------------------------------------------------------------------------
PrintLEDs
          pop    R4                     ;save return address
          pop    R5                     ;get value to print
          
          mov.b  R5 , LEDsArrPort       ;function body
          
          push   R4
          ret
;----------------------------------------------------------------------------------------------
;             Clear LEDs - void function without arguments nor return value  
;----------------------------------------------------------------------------------------------
ClrLEDs   clr.b  LEDsArrPort
          ret
;----------------------------------------------------------------------------------------------
;             polling based Delay function  
;----------------------------------------------------------------------------------------------
delay     mov    #4, R6 
          pop    R4                     ;save return address
subloop   pop    R5                     ;get delay value
          push   R5  
          
L         dec.w  R5                     ;function body begin
          jnz    L                      ;function body end
          dec    R6
          jnz    subloop
          pop    R5
          push   R4
          ret



delay_ms    pop     R4
            pop     R7
L3          mov     #10, R6    
loopD       mov.w   #35,R5                 ; Delay of 0.5 sec  
L2          dec.w   R5                        ; Decrement R5
            jnz     L2                         ; Delay over?, jump if not zero(if bit Z in SR isn't zero from the last command)
            dec     R6
            jnz     loopD
            dec.w   R7 
            jnz     L3
            push    R4
            ret
            
          

                ENDMOD
                END