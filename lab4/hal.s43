#include "bsp.h"

                MODULE    HAL
                PUBLIC    SysConfig, PrintLEDs, ClrLEDs, ReadSWs, delay
                EXTERN    GPIOconfig, TIMERconfig, ADCconfig
                EXTERN    state

                RSEG      CODE
           
;----------------------------------------------------------------------------------------------
;             System configuration  
;----------------------------------------------------------------------------------------------
SysConfig
          CALL   #GPIOconfig
          CALL   #TIMERconfig
          CALL   #ADCconfig
          ret
           
;----------------------------------------------------------------------------------------------
;             Print LEDs - function only with argument and no return value  
;----------------------------------------------------------------------------------------------
PrintLEDs
          pop    R4                     ;save return address
          pop    R5                     ;get value to print
          
          mov.b  R5 , LEDsArrPort       ;function body
          
          push   R4
          ret
;----------------------------------------------------------------------------------------------
;             Clear LEDs - void function without arguments nor return value  
;----------------------------------------------------------------------------------------------
ClrLEDs   clr.b  LEDsArrPort
          ret
;----------------------------------------------------------------------------------------------
;             Read SWs - function without arguments and with return value  
;----------------------------------------------------------------------------------------------
ReadSWs   pop    R4                     ;save return address
          
          mov.b  PBsArrPort , R5        ;function body
          and.b  #0xF0 , R5
          push   R5                     ;function body end
          
          push   R4
          ret

;----------------------------------------------------------------------------------------------
;             PORT2 Interrupt ServiceRoutine  
;----------------------------------------------------------------------------------------------
PORT2_ISR push   #debounceVal
          call   #delay
          bit.b  #0x01 , PBsArrIntPend   ;check if PB0 is pushed
          jnz    P2_0
          bit.b  #0x02 , PBsArrIntPend   ;check if PB1 is pushed
          jnz    P2_1
          bit.b  #0x04 , PBsArrIntPend   ;check if PB2 is pushed
          jnz    P2_2
          
P2_0      mov    #1 , state
          jmp    exitLPM0
P2_1      mov    #2 , state
          jmp    exitLPM0
P2_2      mov    #0 , state             ;sleep

exitLPM0  bic    #CPUOFF , 0(SP)        ;exit LPM0
          bic.b  #0x07 , PBsArrIntPend  
          reti

;----------------------------------------------------------------------------------------------
;             polling based Delay function  
;----------------------------------------------------------------------------------------------
delay     mov    #4, R6 
          pop    R4                     ;save return address
subloop   pop    R5                     ;get delay value
          push   R5  
          
L         dec.w  R5                     ;function body begin
          jnz    L                      ;function body end
          dec    R6
          jnz    subloop
          pop    R5
          push   R4
          ret
          
          
          
;Delay_05sec mov     #4, R6    
;loopD       mov.w   #43550,R5                 ; Delay of 0.5 sec  
;L           dec.w   R5                        ; Decrement R5
;            jnz     L                         ; Delay over?, jump if not zero(if bit Z in SR isn't zero from the last command)
;            dec     R6
;            jnz     loopD
;            ret
;----------------------------------------------------------------------------------------------
 
 
                ENDMOD
                END